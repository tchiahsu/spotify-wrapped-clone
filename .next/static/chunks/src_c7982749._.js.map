{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/tonyhsu/Desktop/projects/spotify-wrapped/src/lib/spotify.tsx"],"sourcesContent":["/**\n * It loads the verifier from local storage and using both the code returned from the callback and the\n * verifier to perfrom a POST to the Spotify token API. The API uses two values to verify the request and\n * it returns an access token.\n */\nexport async function getAccessToken(clientId: string, code: string): Promise<string> {\n    const verifier = localStorage.getItem(\"verifier\")\n    const redirectUri = `http://127.0.0.1:3000/callback`;\n\n    if (!verifier) {\n        console.log(\"Missing Verifier Error\")\n        throw new Error(\"Missing Verifier\")\n    }\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"authorization_code\");\n    params.append(\"code\", code);\n    params.append(\"redirect_uri\", redirectUri);\n    params.append(\"code_verifier\", verifier!);\n\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: params\n    });\n\n    const { access_token } = await result.json();\n\n    console.log(`Client Id: ${clientId}`)\n    console.log(`Code: ${code}`)\n    console.log(`Verifier: ${verifier}`)\n    console.log(`Access Token: ${access_token}`)\n\n    return access_token;\n}\n\n/**\n * Fetch User Top 5 Artists\n */\nexport async function fetchTopArtists(token: string) {\n    const result = await fetch(\"https://api.spotify.com/v1/me/top/artists?time_range=long_term&limit=5\", {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${token}` },\n    });\n\n    if (!result.ok) {\n        throw new Error(`Spotify API error: ${result.status} ${result.statusText}`)\n    }\n\n    return await result.json()\n}\n\n/**\n * Fetch User Top 50 Tracks\n */\nexport async function fetchTopTracks(token: string) {\n    const result = await fetch(\"https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=50\", {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${token}` }\n    });\n\n    if (!result.ok) {\n        throw new Error(`Spotify API error: ${result.status} ${result.statusText}`)\n    }\n\n    return await result.json()\n}\n\n/**\n * Batch artists for unique IDs\n */\nexport async function getUniqueArtists(token: string, artistsId: string[]) {\n    const batchIds = artistsId.join(\",\");\n    console.log(batchIds)\n    const result = await fetch(`https://api.spotify.com/v1/artists?ids=${batchIds}`, {\n        headers: { Authorization: `Bearer ${token}` }\n    });\n\n    if (!result.ok) {\n        throw new Error(`Failed to fetch artists: ${result.statusText}`)\n    }\n\n    return await result.json()\n}\n\n/**\n * Create Top 50 song playlist\n */\nexport async function createPlaylist(token: string, userId: string) {\n    const body = {\n        name: \"My Wrapped â€¢ Top 50\",\n        description: \"Your Top 50 Tracks from Spotify long term data\",\n        public: false\n    }\n\n    const result = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        method: \"POST\",\n        headers: { Authorization: `Bearer ${token}`, \"Content-Type\": `application/json` },\n        body: JSON.stringify(body)\n    })\n\n    if (!result.ok) {\n        throw new Error(`Failed to create playlist: ${result.statusText}`)\n    }\n\n    return await result.json();\n}\n\n/**\n * Add Tracks to Playlist\n */\nexport async function addTrackToPlaylist(token: string, playlistId: string, trackUris: string[]) {\n    const result = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        method: \"POST\",\n        headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ uris: trackUris})\n    })\n\n    if (!result.ok) {\n        throw new Error(`Failed to add tracks: ${result.statusText}`);\n    }\n\n    return result.json();\n}\n\n/**\n * A call is made using the browser's Fetch API to get the profile data.\n * The authorization header, is set to Bearer TOKEN, where token is the access token\n * that we get from the spotify endpoint\n */\nexport async function fetchProfile(token: string) {\n    const result = await fetch(\"https://api.spotify.com/v1/me\", {\n        method: \"GET\", headers: { Authorization: `Bearer ${token}` }\n    });\n\n    return await result.json();\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/tonyhsu/Desktop/projects/spotify-wrapped/src/components/Tag.tsx"],"sourcesContent":["import React from \"react\";\n\ntype TagProps = {\n    children: React.ReactNode;\n};\n\nconst Tag = ({ children }: TagProps) => {\n    return (\n        <div\n            className=\"bg-[#1db954] w-1/6 min-w-[14em] max-w-[15em] px-6 py-3 rounded-full font-bold text-black text-center justify-center items-center\"\n        >\n            {children}\n        </div>\n    )\n}\n\nexport default Tag;"],"names":[],"mappings":";;;;;;AAMA,MAAM,MAAM;QAAC,EAAE,QAAQ,EAAY;IAC/B,qBACI,6LAAC;QACG,WAAU;kBAET;;;;;;AAGb;KARM;uCAUS","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///Users/tonyhsu/Desktop/projects/spotify-wrapped/src/app/callback/page.tsx"],"sourcesContent":["\"use client\"\nimport { useEffect, useRef } from \"react\";\nimport { useSearchParams, useRouter } from \"next/navigation\";\nimport { getAccessToken } from \"lib/spotify\";\nimport Tag from \"../../components/Tag\";\nimport Image from \"next/image\";\n\nexport default function Callback() {\n    const router = useRouter();\n    const params = useSearchParams();\n    const code = params.get(\"code\");\n    const ranRef = useRef(false); // guard against Strict Mode double-invoke in dev\n\n    useEffect(() => {\n        if (!code) return;\n        if (ranRef.current) return;\n        ranRef.current = true;\n\n        (async () => {\n            try {\n                const clientId = localStorage.getItem(\"clientId\");\n                if (!clientId) throw new Error(\"Client ID is invalid of null.\");\n                \n                const token = await getAccessToken(clientId, code);\n                if (!token) throw new Error(\"No access token returned.\");\n\n                localStorage.setItem(\"token\", token);\n\n                setTimeout(() => {\n                    router.push(\"/dashboard\");\n                }, 600);\n            } catch (error) {\n                console.error(\"Error getting Access Token:\", error)\n            }\n        })();\n    }, [code, router]);\n\n    return (\n        <>\n            <main className=\"flex flex-col h-screen w-screen justify-center items-center mt-[-50px] gap-7 sm:items-center\">\n                {/* Spotify Logo */}\n                <Image\n                    src=\"/spotify_white.png\"\n                    alt=\"spotify logo\"\n                    width={50}\n                    height={50}\n                />\n\n                {/* Intro Title */}\n                <div className=\"flex flex-col gap-2 items-center\">\n                <div className=\"text-6xl font-bold text-center\">Authenticating your Account!</div>\n                <div className=\"text-xl text-center\">This will only take a few seconds.</div>\n                </div>\n\n                {/* Authenticating Tag */}\n                <Tag>\n                    <div className=\"flex justify-center items-center gap-2\">\n                        <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-black\"></div>\n                        <span className=\"ml-2\">Authenticating...</span>\n                    </div>\n                </Tag>\n            </main>\n            <footer className=\"flex flex-col justify-center items-center text-center text-xs text-[#7c7c7c]\">\n                <div>Built with Next.js & Spotify Web API | Not affiliated with Spotify.</div>\n                <div>Â© 2025 Tony Hsu Tai</div>\n            </footer>\n        </>\n    );\n}"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AACA;AACA;;;AALA;;;;;;AAOe,SAAS;;IACpB,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,SAAS,IAAA,wJAAe;IAC9B,MAAM,OAAO,OAAO,GAAG,CAAC;IACxB,MAAM,SAAS,IAAA,uKAAM,EAAC,QAAQ,iDAAiD;IAE/E,IAAA,0KAAS;8BAAC;YACN,IAAI,CAAC,MAAM;YACX,IAAI,OAAO,OAAO,EAAE;YACpB,OAAO,OAAO,GAAG;YAEjB;sCAAC;oBACG,IAAI;wBACA,MAAM,WAAW,aAAa,OAAO,CAAC;wBACtC,IAAI,CAAC,UAAU,MAAM,IAAI,MAAM;wBAE/B,MAAM,QAAQ,MAAM,AAL5B,IAK4B,2IAAc,AAWzC,EAX0C,UAAU;wBAC7C,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM;wBAE5B,aAAa,OAAO,CAAC,SAAS;wBAE9B;kDAAW;gCACP,OAAO,IAAI,CAAC;4BAChB;iDAAG;oBACP,EAAE,OAAO,OAAO;wBACZ,QAAQ,KAAK,CAAC,+BAA+B;oBACjD;gBACJ;;QACJ;6BAAG;QAAC;QAAM;KAAO;IAEjB,qBACI;;0BACI,6LAAC;gBAAK,WAAU;;kCAEZ,6LAAC,2IAAK;wBACF,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;;;;;;kCAIZ,6LAAC;wBAAI,WAAU;;0CACf,6LAAC;gCAAI,WAAU;0CAAiC;;;;;;0CAChD,6LAAC;gCAAI,WAAU;0CAAsB;;;;;;;;;;;;kCAIrC,6LAAC,uIAAG;kCACA,cAAA,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCAAI,WAAU;;;;;;8CACf,6LAAC;oCAAK,WAAU;8CAAO;;;;;;;;;;;;;;;;;;;;;;;0BAInC,6LAAC;gBAAO,WAAU;;kCACd,6LAAC;kCAAI;;;;;;kCACL,6LAAC;kCAAI;;;;;;;;;;;;;;AAIrB;GA7DwB;;QACL,kJAAS;QACT,wJAAe;;;KAFV","debugId":null}}]
}